"use strict";class InputManager{constructor(){this.keys={},this.callbacks=[],this.callbacks_i=0;const e=new Map,t=(e,t)=>{const s=this.keys[e];if(s.justPressed=t&&!s.down,s.down=t,s.justReleased=!s.down&&!t&&!s.justReleased,s.justPressed&&this.callbacks[e].length)for(let t in this.callbacks[e])"justPressed"==this.callbacks[e][t].actionType&&(this.callbacks[e][t].callback(),this.callbacks[e][t].maxCalls&&(this.callbacks[e][t].totalCalls++,this.callbacks[e][t].totalCalls>=this.callbacks[e][t].maxCalls&&this.callbacks[e].splice(t,1)))},s=(t,s)=>{this.keys[s]={down:!1,justPressed:!1,justReleased:!1,clock:new THREE.Clock},this.callbacks[s]=[],e.set(t,s)},i=(s,i)=>{const a=e.get(s);a&&t(a,i)};this.addKeyCallback=((e,t,s,i=!1)=>(this.callbacks_i++,this.callbacks[e][this.callbacks_i]={actionType:t,callback:s,maxCalls:i,totalCalls:0},this.callbacks_i)),this.removeKeyCallback=((e,t)=>{this.callbacks[e][t]&&this.callbacks[e].splice(t,1)}),s(40,"down"),s(83,"down"),s(17,"down"),s(87,"space"),s(38,"space"),s(32,"space"),window.addEventListener("keydown",e=>{i(e.keyCode,!0)}),window.addEventListener("keyup",e=>{i(e.keyCode,!1)})}update(){for(const e of Object.values(this.keys))e.justPressed&&(e.clock.start(),e.justPressed=!1),e.justReleased&&(e.clock.stop(),e.clock.elapsedTime=0,e.justReleased=!1)}}class AudioManager{constructor(){this.base_path=config.base_path+"sound/",this.sounds={score:new Howl({src:[this.base_path+"Pickup_Coin103.wav"],preload:!0,autoplay:!1,loop:!1,volume:.3}),highest_score:new Howl({src:[this.base_path+"Powerup33.wav"],preload:!0,autoplay:!1,loop:!1,volume:.4}),jump:new Howl({src:[this.base_path+"Jump24.wav"],preload:!0,autoplay:!1,loop:!1,volume:.15}),killed:new Howl({src:[this.base_path+"Randomize62.wav"],preload:!0,autoplay:!1,loop:!1,volume:.15}),bg:new Howl({src:[this.base_path+"ingame/Reloaded Games - Music.ogg"],preload:!0,autoplay:!0,loop:!0,volume:.75})}}play(e){this.sounds[e].stop(),this.sounds[e].play()}stop(e){this.sounds[e].stop()}pause(e){this.sounds[e].pause()}resume(e){this.sounds[e].play()}}class EnemyManager{constructor(){this.enemies=[],this.clock=new THREE.Clock,this.config={enable_collisions:!0,max_amount:{cactus:50,ptero:10},vel:0,score_z:13,remove_z:25,z_distance:{cactus:20,ptero:20},z_distance_rand:{cactus:[.9,2],ptero:[.7,3]},rescale_rand:{cactus:[.6,1]},chance_to_spawn_tail:[100,25],tail_rescale_rand:[[.6,.9],[.4,.7]],ptero_anim_speed:.1,ptero_y_rand:[0,1.3,3.5]},this.cache={cactus:{material:[],geometry:[]},ptero:{material:[],geometry:[]}}}init(){this.cache.cactus={geometry:load_manager.get_mesh_geometry("cactus"),material:load_manager.get_mesh_material("cactus")},this.cache.ptero={geometry:load_manager.get_mesh_geometry("ptero"),material:load_manager.get_mesh_material("ptero")};for(let e=0;e<this.config.max_amount.cactus;e++)this.spawn("cactus")}reset(){for(let e=0;e<this.enemies.length;e++)for(let t=0;t<this.enemies[e].length;t++)scene.remove(this.enemies[e][t]);this.enemies=[]}spawnPteros(){for(let e=0;e<this.config.max_amount.ptero;e++)this.spawn("ptero")}findZForPtero(e=25,t=50){let s=0,i=this.eLast("ptero");i&&(s=i[0].position.z);for(let i=1;i<this.enemies.length;i++){let a=-this.enemies[i][0].position.z- -this.enemies[i-1][this.enemies[i-1].length-1].position.z,o=-(-this.enemies[i][0].position.z-a/2);if(a>e&&-s+a+t<-o)return console.log("Z FOUND",o,"DIFF IS",a),o}console.log("Z FOR PTERO NOT FOUND, CHAINING TO THE END");let a=this.get_z("ptero");return-(-this.enemies[this.enemies.length-1][this.enemies[this.enemies.length-1].length-1].position.z+a)}spawn(e="cactus",t=!1,s=0){let i=Math.floor(Math.random()*load_manager.assets[e].mesh.length),a=new THREE.Mesh(this.cache[e].geometry[i],this.cache[e].material[i]);a.enemy_type=e,a.castShadow=!0,"cactus"==e?a.rotation.y=-Math.PI/2:a.current_frame=i;let o=[a];if("cactus"==e){let i=1;i=t?this.random(this.config.tail_rescale_rand[s][0],this.config.tail_rescale_rand[s][1]):this.get_rr("cactus"),o[0].scale.set(i,i,i),o[0].position.x=0,o[0].position.y=nature.cache.ground.box.max.y+-nature.cache.ground.box.min.y-2.5;let a=this.get_z("cactus");if(t?o[0].position.z=0==s?-(1.7*i-t):-(1.9*i-t):this.enemies.length?o[0].position.z=-(-this.enemies[this.enemies.length-1][this.enemies[this.enemies.length-1].length-1].position.z+a):o[0].position.z=-2*a,t)return o[0];"cactus"==e&&Math.floor(100*Math.random())<this.config.chance_to_spawn_tail[0]&&(o.push(this.spawn("cactus",o[0].position.z,0)),Math.floor(100*Math.random())<this.config.chance_to_spawn_tail[1]&&o.push(this.spawn("cactus",o[1].position.z,1)))}else o[0].position.x=0,o[0].position.y=this.get_ptero_y("ptero"),o[0].position.z=this.findZForPtero();this.enemies.push(o);for(let e=0;e<o.length;e++)scene.add(o[e])}eFind(e){let t=[];for(let s=0;s<this.enemies.length;s++)this.enemies[s][0].enemy_type==e&&t.push(this.enemies[s]);return t}eLast(e){for(let t=this.enemies.length-1;t>0;t--)if(this.enemies[t][0].enemy_type==e)return this.enemies[t];return!1}eCount(e){let t=0;for(let s=0;s<this.enemies.length;s++)this.enemies[s][0].enemy_type==e&&t++;return t}random(e,t,s=!0){return s?(Math.random()*(t-e)+e).toFixed(4):Math.floor(Math.random()*t)+e}get_rr(e){return this.random(this.config.rescale_rand[e][0],this.config.rescale_rand[e][1])}get_z(e){let t=this.random(this.config.z_distance_rand[e][0],this.config.z_distance_rand[e][1]);return this.config.z_distance[e]*t}get_ptero_y(e){return nature.cache.ground.box.max.y+-nature.cache.ground.box.min.y-2.5+this.config.ptero_y_rand[this.random(0,this.config.ptero_y_rand.length,!1)]}move(e){for(let t=0;t<this.enemies.length;t++){if(this.enemies[t][0].position.z>this.config.remove_z){let e=this.enemies.splice(t,1)[0];if("cactus"==e[0].enemy_type)for(let t=0;t<e.length;t++){let s=1;s=t>0?this.random(this.config.tail_rescale_rand[t-1][0],this.config.tail_rescale_rand[t-1][1]):this.get_rr("cactus"),e[t].scale.set(s,s,s);let i=this.get_z("cactus");if(t>0)e[t].position.z=-(-e[t-1].position.z+1.7*s);else{let t=this.eLast("cactus");e[0].position.z=-(-t[0].position.z+i)}}else e[0].position.y=this.get_ptero_y("ptero"),e[0].position.z=this.findZForPtero();this.enemies.push(e)}for(let s=0;s<this.enemies[t].length;s++)if("cactus"==this.enemies[t][s].enemy_type?this.enemies[t][s].translateX(this.config.vel*e):this.enemies[t][s].translateZ(this.config.vel*e),this.config.enable_collisions){let e=this.box3=new THREE.Box3(new THREE.Vector3,new THREE.Vector3);e.setFromObject(enemy.enemies[t][s]);let i=new THREE.Box3(new THREE.Vector3,new THREE.Vector3);if(i.setFromObject(player.collisionBox),e.intersectsBox(i))return void game.stop()}}}increase_velocity(e=1,t=!1){this.config.vel>=35&&!t||(t?this.config.vel=e:this.config.vel+=e,this.config.vel<10?(player.setVelocity(15),player.setVelocity(1.1,!0),player.setGravity(37),player.setGravity(30,!0),logs.log("Speed level 1")):this.config.vel>=10&&this.config.vel<20&&(15==player.jump.vel||t)?(player.setVelocity(19),player.setVelocity(1.1,!0),player.setGravity(60),player.setGravity(40,!0),dynoDustEmitter.removeAllParticles(),dynoDustEmitter.stopEmit(),dynoDustEmitter=nebulaCreateDynoDustEmitter(7),nebulaSystem.addEmitter(dynoDustEmitter),logs.log("Speed level 2")):this.config.vel>=20&&this.config.vel<30&&(19==player.jump.vel||t)?(player.setVelocity(25),player.setVelocity(1.3,!0),player.setGravity(100),player.setGravity(70,!0),dynoDustEmitter.removeAllParticles(),dynoDustEmitter.stopEmit(),dynoDustEmitter=nebulaCreateDynoDustEmitter(10),nebulaSystem.addEmitter(dynoDustEmitter),logs.log("Speed level 3")):this.config.vel>=30&&(25==player.jump.vel||t)&&(player.setVelocity(30),player.setVelocity(1.5,!0),player.setGravity(150),player.setGravity(70,!0),dynoDustEmitter.removeAllParticles(),dynoDustEmitter.stopEmit(),dynoDustEmitter.dead=!0,logs.log("Speed level 4")))}normalizePteroPos(e,t=10){let s=-e.position.z;for(let t=0;t<this.enemies.length;t++){let i=this.enemies[t][0];if("cactus"==i.enemy_type){let a=-i.position.z,o=4*this.enemies[t].length;if(s>a-o&&s<a+o){let s=a- -this.enemies[t-1][0].position.z;e.position.z=-(-this.enemies[t-1][0].position.z+s/2),s<25&&(e.position.y=this.config.ptero_y_rand[this.config.ptero_y_rand.length-1])}}}}normalizePterozzzZ(e,t=1,s=15){return e}pteroNextFrame(){for(let e=0;e<this.enemies.length;e++)"ptero"==this.enemies[e][0].enemy_type&&(this.enemies[e][0].current_frame++,this.enemies[e][0].current_frame>this.cache.ptero.geometry.length-1&&(this.enemies[e][0].current_frame=0),this.enemies[e][0].geometry=this.cache.ptero.geometry[this.enemies[e][0].current_frame])}update(e){this.move(e),this.clock.getElapsedTime()>this.config.ptero_anim_speed&&(this.clock.elapsedTime=0,this.pteroNextFrame())}}class ScoreManager{constructor(){this.score=0,this.highest_score=0,this.highest_alert=!1,this.zero_padding=5,this.config={},this.timer=null,this.add_vel=10,this.step=100,this.is_flashing=!1,this.lvl=0,this.clock=new THREE.Clock,this.last_flash_score=0,Number.prototype.pad=function(e){for(var t=String(this);t.length<(e||2);)t="0"+t;return t},this.canvas=document.createElement("canvas"),this.canvas.id="score-counter",this.canvas.width=400,this.canvas.height=60,document.body.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),localStorage.getItem("highest_score___GLITCH_FIX")||(localStorage.setItem("highest_score",0),localStorage.setItem("highest_score___GLITCH_FIX",!0))}set(e){this.score=e,this.highest_score=localStorage.getItem("highest_score"),this.highest_score<25?this.highest_alert=!0:this.highest_alert=!1}add(e){this.score+=e,this.score>this.highest_score&&(localStorage.setItem("highest_score",this.score),this.highest_score=this.score,this.highest_alert||(audio.play("highest_score"),this.highest_alert=!0)),0!=this.score&&Math.trunc(this.score)%this.step==0&&Math.trunc(this.score)!=this.last_flash_score&&(this.last_flash_score=Math.trunc(this.score),this.flash())}flash(){this.clock.stop(),this.clock.elapsedTime=0,this.clock.start(),this.is_flashing=!0,audio.play("score"),enemy.increase_velocity(),this.score>=400&&0==this.lvl?(this.lvl=1,enemy.spawnPteros(),logs.log("Pterodactyls started to spawn")):this.score>=1e3&&1==this.lvl?(this.lvl=2,this.add_vel=20,logs.log("Score level 2")):this.score>=3e3&&2==this.lvl&&(this.lvl=3,this.add_vel=40,logs.log("Score level 3"))}reset(){this.clock=new THREE.Clock,this.lvl=0,this.add_vel=10}update(e){this.add(this.add_vel*e);let t="HI "+Math.trunc(this.highest_score).pad(this.zero_padding);this.is_flashing?Math.trunc(4*this.clock.getElapsedTime())%2&&(t=t+" "+Math.trunc(this.score).pad(this.zero_padding),this.clock.getElapsedTime()>1&&(this.is_flashing=!1)):t=t+" "+Math.trunc(this.score).pad(this.zero_padding),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font='28px "Press Start 2P"',this.ctx.fillStyle="rgba(106,133,145,1)",this.ctx.fillText(t,0,60)}}const scene=new THREE.Scene;if(config.renderer.fog){const e=15184465,t=10,s=75;scene.fog=new THREE.Fog(e,t,s)}const camera=new THREE.PerspectiveCamera(config.camera.fov,config.camera.aspect,config.camera.near,config.camera.far),clock=new THREE.Clock;let input=new InputManager,audio=new AudioManager,enemy=new EnemyManager,score=new ScoreManager;const renderer=new THREE.WebGLRenderer({antialias:config.renderer.antialias,alpha:!1,powerPreference:"high-performance",depth:!0});if(scene.background=new THREE.Color(15184465),renderer.setSize(config.renderer.width*config.renderer.render_at,config.renderer.height*config.renderer.render_at),renderer.setPixelRatio(window.devicePixelRatio),config.renderer.shadows&&(renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap),config.renderer.toneMapping&&(renderer.toneMapping=THREE.Uncharted2ToneMapping),renderer.domElement.id="three-canvas",document.body.appendChild(renderer.domElement),!1!==config.renderer.interval&&!0===config.renderer.fps_counter){var fc=document.createElement("div");fc.id="fps-counter",document.body.appendChild(fc)}if(config.renderer.postprocessing.enable){var composer=new THREE.EffectComposer(renderer);if(composer.addPass(new THREE.RenderPass(scene,camera)),config.renderer.postprocessing.sao){let e=new THREE.SAOPass(scene,camera,!1,!0);e.params.saoBias=1,e.params.saoIntensity=.008,e.params.saoScale=10,e.params.saoKernelRadius=10,e.params.saoMinResolution=0,e.params.saoBlur=!0,e.params.saoBlurRadius=3,e.params.saoBlurStdDev=42.3,e.params.saoBlurDepthCutoff=.1,composer.addPass(e)}}if(config.camera.controls){var controls=new THREE.MapControls(camera,renderer.domElement);controls.enableDamping=!0,controls.dampingFactor=.05,controls.screenSpacePanning=!1,controls.minDistance=5,controls.maxDistance=100,controls.maxPolarAngle=Math.PI/2}camera.position.x=7.37041093612718,camera.position.y=3.428590611619372,camera.position.z=22.609984741761778,camera.rotation.x=-.39014130856676893,camera.rotation.y=.5429734306534122,camera.rotation.z=.20935752392633314,config.camera.controls&&(controls.target.set(-1.2946982583264495,-3.0793822864709634e-18,9.30358864783445),controls.update());let ALight=new THREE.AmbientLight(4210752,2.4);scene.add(ALight);let DLight=new THREE.DirectionalLight(16777215,.5),DLightTargetObject=new THREE.Object3D;DLight.position.set(50,30,-18),DLight.target=DLightTargetObject,DLightTargetObject.position.set(-25,-10,-20),DLight.castShadow=config.renderer.shadows,DLight.shadow.radius=1,DLight.shadow.mapSize.width=3072,DLight.shadow.mapSize.height=3072,DLight.shadow.camera.scale.y=3,DLight.shadow.camera.scale.x=8,DLight.shadow.camera.near=0,DLight.shadow.camera.far=100,scene.add(DLight),scene.add(DLightTargetObject),config.camera.helper&&scene.add(new THREE.CameraHelper(DLight.shadow.camera));const nebulaSystem=new Nebula.default;function nebulaCreateDynoDustEmitter(e=5){const t=new Nebula.Emitter;t.rate=new Nebula.Rate(new Nebula.Span(1,2),new Nebula.Span(.1,.25)),t.addInitializer(new Nebula.Mass(10)),t.addInitializer(new Nebula.Radius(.1)),t.addInitializer(new Nebula.Life(1,3));let s=new THREE.BoxGeometry(.1,.1,.1),i=new THREE.MeshLambertMaterial({color:"#E7B251"});t.addInitializer(new Nebula.Body(new THREE.Mesh(s,i)));let a=new Nebula.RadialVelocity(e,new Nebula.Vector3D(0,15,20),40);t.addInitializer(a),t.addBehaviour(new Nebula.Rotate("random","random")),t.addBehaviour(new Nebula.Scale(2,.1));let o=new Nebula.BoxZone(3,2,25);var r,n,l;return o.max=10,t.addBehaviour(new Nebula.CrossZone(o,"bound")),r=0,n=-1.5,l=15.5,t.position.x=r,t.position.y=n,t.position.z=l,o.x=r,o.y=n,o.z=l,t.emit(),t}let dynoDustEmitter=nebulaCreateDynoDustEmitter(4);nebulaSystem.addEmitter(dynoDustEmitter),nebulaSystem.addRenderer(new Nebula.MeshRenderer(scene,THREE));class LogManager{constructor(){this.is_active=!1}enable(){this.is_active=!0}disable(){this.is_active=!1}log(e,t=0){0==t?console.log("[INFO] "+e):1==t?console.log("[WARNING] "+e):2==t&&console.log(["[FATAL] "+e])}}let logs=new LogManager;config.logs&&logs.enable();class PlayerManager{constructor(){this.frames=null,this.frame=null,this.collisionBox=null,this.currentFrame=0,this.clock=new THREE.Clock,this.anim_speed=.1,this.block_fall_fast=!1,this.jump={is_active:!1,vel:15,gravity:-37,boost:{vel:1.1,gravity:-30}}}getVelocity(e=!1){return e?this.jump.boost.vel:this.jump.vel}setVelocity(e=15,t=!1){t?this.jump.boost.vel=e:this.jump.vel=e}getGravity(e=!1){return e?-this.jump.boost.gravity:-this.jump.gravity}setGravity(e=37,t=!1){t?this.jump.boost.gravity=-e:this.jump.gravity=-e}setPlayerFrames(e,t=!1){if(t)this.frames_band=e;else{this.frames=e,this.frame=this.frames[this.currentFrame],this.frame.init_y=this.frame.position.y,scene.add(this.frame);let t=new THREE.BoxGeometry(.5,1.7,.7),s=new THREE.MeshBasicMaterial({color:65280});this.collisionBox=new THREE.Mesh(t,s),this.collisionBox.position.x=this.frame.position.x,this.collisionBox.position.y=this.frame.position.y+1.4,this.collisionBox.position.z=this.frame.position.z,scene.add(this.collisionBox),this.collisionBox.visible=!1}}nextFrame(e=!1){!e&&this.jump.is_active||(this.currentFrame++,this.currentFrame>this.frames.length-1&&(this.currentFrame=0),input.keys.down.down?(this.frame.geometry=this.frames_band[this.currentFrame].geometry,this.collisionBox.scale.y=.5,this.collisionBox.scale.z=2.5,this.collisionBox.position.z=this.frame.position.z-.5,this.collisionBox.position.y=this.frame.position.y+.7):(this.frame.geometry=this.frames[this.currentFrame].geometry,this.collisionBox.scale.y=1,this.collisionBox.scale.z=1,this.collisionBox.position.z=this.frame.position.z,this.collisionBox.position.y=this.frame.position.y+1.4))}getY(){return this.frame.position.y}setY(e){this.frame.position.y=e}initJump(e){this.jump.is_active=!0,this.jump.falling=!1,this.frame.vel=this.jump.vel,this.frame.gravity=this.jump.gravity,this.frame.boost=!1,this.nextFrame(!0),audio.play("jump"),dynoDustEmitter.dead||dynoDustEmitter.stopEmit(),input.keys.down.down&&(this.block_fall_fast=!0)}doJump(e){!input.keys.space.justPressed||this.jump.is_active||input.keys.down.down||this.initJump(e),this.jump.is_active&&(input.keys.space.clock.getElapsedTime(),!this.frame.boost&&input.keys.space.down&&input.keys.space.clock.getElapsedTime()>.2&&(this.frame.vel=this.frame.vel*this.jump.boost.vel,this.frame.gravity=this.jump.boost.gravity,this.frame.boost=!0),input.keys.down.justReleased&&(this.block_fall_fast=!1),input.keys.down.down&&!this.block_fall_fast&&(this.frame.gravity=1.1*this.frame.gravity,this.frame.geometry=this.frames_band[this.currentFrame].geometry,this.collisionBox.scale.y=.5,this.collisionBox.scale.z=2.5,this.collisionBox.position.z=this.frame.position.z-.5,this.collisionBox.position.y=this.frame.position.y-2),this.frame.position.y=this.frame.position.y+this.frame.vel*e,input.keys.down.down&&!this.block_fall_fast?this.collisionBox.position.y=this.frame.position.y+.8:this.collisionBox.position.y=this.frame.position.y+1.4,this.frame.vel=this.frame.vel+this.frame.gravity*e,this.frame.position.y<=this.frame.init_y&&(input.keys.space.down?input.keys.down.down?(this.jump.is_active=!1,dynoDustEmitter.dead||dynoDustEmitter.emit()):this.initJump(e):(this.jump.is_active=!1,dynoDustEmitter.dead||dynoDustEmitter.emit()),this.frame.position.y=this.frame.init_y,this.collisionBox.position.y=this.frame.position.y+1.4,input.keys.space.clock.elapsedTime=0))}update(e){this.frames&&(this.anim_speed=.18/(enemy.config.vel/2),this.doJump(e),this.clock.getElapsedTime()>this.anim_speed&&(this.clock.elapsedTime=0,this.nextFrame()))}}let player=new PlayerManager;class NatureManager{constructor(){this.config={max_amount:{rocks:10,flowers:10,misc:10},rescale_rand:{rocks:[.4,1.8],flowers:[.5,1.4]},z_distance:{rocks:4,flowers:5,misc:10},z_distance_rand:{rocks:[.5,4],flowers:[2,10],misc:[1,4]},x_random_range:{rocks:[-1.5,1.5],flowers:[-1.5,1.5]},remove_z:{rocks:25,flowers:20,misc:20,ground:40},misc_items:{PalmTree:{rescale_rand:[2,3],x_random_range:[-25,-5]},Tumbleweed:{rescale_rand:[.6,.8],x_random_range:[-25,-5],random_rotate_vel:[.01,.1]}}},this.ground_chunks=[],this.rocks=[],this.flowers=[],this.misc=[],this.cache={ground:{box:null,geometry:null,material:null},rocks:{geometry:null,material:null},flowers:{geometry:null,material:null},misc:{geometry:null,material:null}}}initEarth(){let e=new THREE.BoxGeometry(120,.1,200),t=new THREE.MeshLambertMaterial({color:14335884});window.cube=new THREE.Mesh(e,t),window.cube.receiveShadow=!0,cube.position.x=-15,cube.position.y=-.1,cube.position.z=-20,cube.rotation.z=-.15,scene.add(cube)}initGround(e=11){let t=load_manager.get_vox("ground");this.cache.ground={geometry:t.geometry,material:t.material};for(let t=0;t<e;t++){let e=new THREE.Mesh(this.cache.ground.geometry,this.cache.ground.material);e.position.y=-2.5,e.receiveShadow=!0,t>0?e.position.z=this.ground_chunks[this.ground_chunks.length-1].position.z-10:(e.position.z=15,this.cache.ground.box=(new THREE.Box3).setFromObject(e)),this.ground_chunks.push(e),scene.add(e)}}moveGround(e){for(let t=0;t<this.ground_chunks.length;t++){if(this.ground_chunks[t].position.z>this.config.remove_z.ground){let e=this.ground_chunks.splice(t,1)[0];e.position.z=this.ground_chunks[this.ground_chunks.length-1].position.z-10,this.ground_chunks.push(e)}this.ground_chunks[t].position.z+=enemy.config.vel*e}}initRocks(){load_manager.get_vox("rocks");this.cache.rocks={geometry:load_manager.get_mesh_geometry("rocks"),material:load_manager.get_mesh_material("rocks")};for(let e=0;e<this.config.max_amount.rocks;e++){let e=Math.floor(Math.random()*load_manager.assets.rocks.mesh.length),t=new THREE.Mesh(this.cache.rocks.geometry[e],this.cache.rocks.material[e]);t.receiveShadow=!0,t.position.x=this.random(this.config.x_random_range.rocks[0],this.config.x_random_range.rocks[1]),t.position.y=nature.cache.ground.box.max.y+.025;let s=this.random(this.config.rescale_rand.rocks[0],this.config.rescale_rand.rocks[1]);t.scale.set(s,s,s);let i=this.get_z("rocks");this.rocks.length?t.position.z=-(-this.rocks[this.rocks.length-1].position.z+i):t.position.z=i,this.rocks.push(t),scene.add(t)}}moveRocks(e){for(let t=0;t<this.rocks.length;t++){if(this.rocks[t].position.z>this.config.remove_z.rocks){let e=this.rocks.splice(t,1)[0],s=this.random(this.config.rescale_rand.rocks[0],this.config.rescale_rand.rocks[1]);e.scale.set(s,s,s);let i=this.get_z("rocks");e.position.z=-(-this.rocks[this.rocks.length-1].position.z+i),e.position.x=this.random(this.config.x_random_range.rocks[0],this.config.x_random_range.rocks[1]),this.rocks.push(e)}this.rocks[t].translateZ(enemy.config.vel*e)}}initFlowers(){load_manager.get_vox("flowers");this.cache.flowers={geometry:load_manager.get_mesh_geometry("flowers"),material:load_manager.get_mesh_material("flowers")};for(let e=0;e<this.config.max_amount.flowers;e++){let e=Math.floor(Math.random()*load_manager.assets.flowers.mesh.length),t=new THREE.Mesh(this.cache.flowers.geometry[e],this.cache.flowers.material[e]);t.castShadow=!0,t.receiveShadow=!0,t.position.x=this.random(this.config.x_random_range.flowers[0],this.config.x_random_range.flowers[1]),t.position.y=nature.cache.ground.box.max.y+.025;let s=this.random(this.config.rescale_rand.flowers[0],this.config.rescale_rand.flowers[1]);t.scale.set(s,s,s);let i=this.get_z("flowers");this.flowers.length?t.position.z=-(-this.flowers[this.flowers.length-1].position.z+i):t.position.z=i,this.flowers.push(t),scene.add(t)}}moveFlowers(e){for(let t=0;t<this.flowers.length;t++){if(this.flowers[t].position.z>this.config.remove_z.flowers){let e=this.flowers.splice(t,1)[0],s=this.random(this.config.rescale_rand.flowers[0],this.config.rescale_rand.flowers[1]);e.scale.set(s,s,s);let i=this.get_z("flowers");e.position.z=-(-this.flowers[this.flowers.length-1].position.z+i),e.position.x=this.random(this.config.x_random_range.flowers[0],this.config.x_random_range.flowers[1]),this.flowers.push(e)}this.flowers[t].translateZ(enemy.config.vel*e)}}initMisc(){let e=load_manager.get_vox("misc");this.cache.misc={geometry:load_manager.get_mesh_geometry("misc"),material:load_manager.get_mesh_material("misc")};for(let t=0;t<this.config.max_amount.misc;t++){let t=Math.floor(Math.random()*load_manager.assets.misc.mesh.length),s=new THREE.Mesh(this.cache.misc.geometry[t],this.cache.misc.material[t]);s.misc_type=e[t].misc_type,s.castShadow=!0,s.receiveShadow=!0,s.position.x=this.random(this.config.misc_items[s.misc_type].x_random_range[0],this.config.misc_items[s.misc_type].x_random_range[1]),"Tumbleweed"==s.misc_type?(s.position.y=.15*-s.position.x+nature.cache.ground.box.max.y,s.rotation.z=-.02*-s.position.x,s.rotation.y=-Math.PI/2,s.rotate_vel=this.random(this.config.misc_items[s.misc_type].random_rotate_vel[0],this.config.misc_items[s.misc_type].random_rotate_vel[1])):(s.position.y=.095*-s.position.x+nature.cache.ground.box.max.y,s.rotation.z=-.02*-s.position.x);let i=this.random(this.config.misc_items[s.misc_type].rescale_rand[0],this.config.misc_items[s.misc_type].rescale_rand[1]);s.scale.set(i,i,i);let a=this.get_z("misc");this.misc.length?s.position.z=-(-this.misc[this.misc.length-1].position.z+a):s.position.z=a,this.misc.push(s),scene.add(s)}}moveMisc(e){for(let t=0;t<this.misc.length;t++){if(this.misc[t].position.z>this.config.remove_z.misc){let e=this.misc.splice(t,1)[0],s=this.random(this.config.misc_items[e.misc_type].rescale_rand[0],this.config.misc_items[e.misc_type].rescale_rand[1]);e.scale.set(s,s,s);let i=this.get_z("misc");e.position.z=-(-this.misc[this.misc.length-1].position.z+i),e.position.x=this.random(this.config.misc_items[e.misc_type].x_random_range[0],this.config.misc_items[e.misc_type].x_random_range[1]),"Tumbleweed"==e.misc_type?(e.position.y=.15*-e.position.x+nature.cache.ground.box.max.y,e.rotation.z=-.02*-e.position.x,e.rotation.y=-Math.PI/2,this.misc[t].rotate_vel=this.random(this.config.misc_items[e.misc_type].random_rotate_vel[0],this.config.misc_items[e.misc_type].random_rotate_vel[1])):(e.position.y=.095*-e.position.x+nature.cache.ground.box.max.y,e.rotation.z=-.02*-e.position.x),this.misc.push(e)}"Tumbleweed"==this.misc[t].misc_type?(this.misc[t].geometry.center(),this.misc[t].rotation.z-=this.misc[t].rotate_vel,this.misc[t].position.z+=1.3*enemy.config.vel*e):this.misc[t].translateZ(enemy.config.vel*e)}}random(e,t,s=!0){return s?(Math.random()*(t-e)+e).toFixed(4):Math.floor(Math.random()*t)+e}get_z(e){let t=this.random(this.config.z_distance_rand[e][0],this.config.z_distance_rand[e][1]);return this.config.z_distance[e]*t}reset(){for(let e=0;e<this.rocks.length;e++)scene.remove(this.rocks[e]);for(let e=0;e<this.flowers.length;e++)scene.remove(this.flowers[e]);for(let e=0;e<this.misc.length;e++)scene.remove(this.misc[e]);for(let e=0;e<this.ground_chunks.length;e++)scene.remove(this.ground_chunks[e]);this.rocks=[],this.flowers=[],this.misc=[],this.ground_chunks=[]}update(e){this.moveGround(e),this.moveRocks(e),this.moveFlowers(e),this.moveMisc(e)}}let nature=new NatureManager;class LoadManager{constructor(){this.assets={},this.vox={},this.onload=function(){},this.onassetload=function(){}}set_status(e,t=!0){this.assets[e].status=t,t&&(logs.log("ASSET LOADED: "+e),this.onassetload&&this.onassetload()),this.check(),this.load_deps(e)}get_status(e){return!!this.assets[e].status}set_mesh(e,t){this.assets[e].mesh=t}get_mesh(e){return this.assets[e].mesh}set_vox(e,t){this.assets[e].is_vox=!0,this.assets[e].mesh=t}get_vox(e){return this.assets[e].mesh}get_random_mesh(e){return this.assets[e].mesh[Math.floor(Math.random()*this.assets[e].mesh.length)]}get_mesh_material(e){if(Array.isArray(this.assets[e].mesh)){let t=[];for(let s=0;s<this.assets[e].mesh.length;s++)t.push(this.assets[e].mesh[s].material);return t}return this.assets[e].mesh.material}get_mesh_geometry(e){if(Array.isArray(this.assets[e].mesh)){let t=[];for(let s=0;s<this.assets[e].mesh.length;s++)t.push(this.assets[e].mesh[s].geometry);return t}return this.assets[e].mesh.geometry}get_mesh_box(e){if(Array.isArray(this.assets[e].mesh)){let t=[];for(let s=0;s<this.assets[e].mesh.length;s++)this.assets[e].is_vox?t.push((new THREE.Box3).setFromObject(this.assets[e].mesh[s].createMesh())):t.push((new THREE.Box3).setFromObject(this.assets[e].mesh[s]));return t}return this.assets[e].is_vox?(new THREE.Box3).setFromObject(this.assets[e].mesh.createMesh()):(new THREE.Box3).setFromObject(this.assets[e].mesh)}set_loader(e,t,s){this.assets[e]={status:!1,callback:s,mesh:null,is_vox:!1,deps:t}}load_all(e,t){logs.log("LOADING ALL ASSETS"),this.onload=e,this.onassetload=t;for(const e in this.assets)this.load_asset(e)}load_asset(e){if(this.get_status(e))logs.log("ASSET ALREADY LOADED: "+e,1);else{if(logs.log("LOADING ASSET: "+e),this.assets[e].deps)for(let t in this.assets[e].deps)if(!this.get_status(this.assets[e].deps[t]))return logs.log("LOADING ASSET "+e+" CANCELED, DEPS YET NOT LOADED: "+this.assets[e].deps,1),!1;this.assets[e].callback()}}load_deps(e){for(let t in this.assets)this.assets[t].deps.includes(e)&&this.load_asset(t)}check(){for(const e in this.assets)if(!this.assets[e].status)return!1;return logs.log("All assets loaded, starting the game."),this.onload(),!0}getLoadPercentage(){let e=Object.keys(this.assets).length,t=0;for(let e in this.assets)this.assets[e].status&&t++;return Math.floor(100*t/e)}}let load_manager=new LoadManager;load_manager.set_loader("ground",[],function(){(new vox.Parser).parse(config.base_path+"objects/ground sand.vox").then(function(e){let t=new vox.MeshBuilder(e,{voxelSize:.1}),s=new THREE.MeshLambertMaterial;s.map=vox.MeshBuilder.textureFactory.getTexture(e),t.material=s,load_manager.set_vox("ground",t),load_manager.set_status("ground",!0),nature.initEarth(),nature.initGround()})}),load_manager.set_loader("dyno",["ground"],function(){let e=new vox.Parser,t=[];for(let s=0;s<=7;s++)e.parse(config.base_path+"objects/t-rex/"+s+".vox").then(function(e){let i=new vox.MeshBuilder(e,{voxelSize:.1}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),i.material=a;let o=i.createMesh();o.castShadow=!0,o.position.y=nature.cache.ground.box.max.y+.05,o.position.z=15,o.rotation.y=Math.PI/2,t[s]=o});var s=setInterval(function(){t.length-1==7&&(clearInterval(s),load_manager.set_vox("dyno",t),load_manager.set_status("dyno",!0),player.setPlayerFrames(load_manager.get_vox("dyno")))},10)}),load_manager.set_loader("dyno_band",["dyno"],function(){let e=new vox.Parser,t=[];for(let s=0;s<=7;s++)e.parse(config.base_path+"objects/t-rex/band/"+s+".vox").then(function(e){let i=new vox.MeshBuilder(e,{voxelSize:.1}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),i.material=a;let o=i.createMesh();o.castShadow=!0,o.position.y=nature.cache.ground.box.max.y+.001,o.position.z=15,o.rotation.y=Math.PI/2,t[s]=o});var s=setInterval(function(){t.length-1==7&&(clearInterval(s),load_manager.set_vox("dyno_band",t),load_manager.set_status("dyno_band",!0),player.setPlayerFrames(t,!0))},10)}),load_manager.set_loader("cactus",["ground"],function(){let e=new vox.Parser,t=(scene.getObjectByName("ground"),[]),s=["cactus","cactus_tall","cactus_thin","fcactus","fcactus_tall","fcactus_thin"];for(let i=0;i<=s.length-1;i++)e.parse(config.base_path+"objects/cactus/"+s[i]+".vox").then(function(e){let s=new vox.MeshBuilder(e,{voxelSize:.09}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),s.material=a,t[i]=s});var i=setInterval(function(){t.length==s.length&&(clearInterval(i),load_manager.set_vox("cactus",t),load_manager.set_status("cactus",!0))},10)}),load_manager.set_loader("ptero",["ground","cactus"],function(){let e=new vox.Parser,t=[];for(let s=0;s<=5;s++)e.parse(config.base_path+"objects/ptero/"+s+".vox").then(function(e){let i=new vox.MeshBuilder(e,{voxelSize:.1}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),i.material=a,t[s]=i});var s=setInterval(function(){t.length-1==5&&(clearInterval(s),load_manager.set_vox("ptero",t),load_manager.set_status("ptero",!0))},10)}),load_manager.set_loader("rocks",["ground"],function(){let e=new vox.Parser,t=[];for(let s=0;s<=4;s++)e.parse(config.base_path+"objects/rocks/"+s+".vox").then(function(e){let i=new vox.MeshBuilder(e,{voxelSize:.1}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),i.material=a,t[s]=i});var s=setInterval(function(){t.length-1==4&&(clearInterval(s),load_manager.set_vox("rocks",t),load_manager.set_status("rocks",!0))},10)}),load_manager.set_loader("flowers",["ground"],function(){let e=new vox.Parser,t=[];for(let s=0;s<=2;s++)e.parse(config.base_path+"objects/flowers/"+s+".vox").then(function(e){let i=new vox.MeshBuilder(e,{voxelSize:.1}),a=new THREE.MeshLambertMaterial;a.map=vox.MeshBuilder.textureFactory.getTexture(e),i.material=a,t[s]=i});var s=setInterval(function(){t.length-1==2&&(clearInterval(s),load_manager.set_vox("flowers",t),load_manager.set_status("flowers",!0))},10)}),load_manager.set_loader("misc",["ground"],function(){let e=new vox.Parser,t=[],s=["PalmTree","Tumbleweed"];for(let i=0;i<s.length;i++)e.parse(config.base_path+"objects/misc/"+s[i]+".vox").then(function(e){let a=new vox.MeshBuilder(e,{voxelSize:.1}),o=new THREE.MeshLambertMaterial;o.map=vox.MeshBuilder.textureFactory.getTexture(e),a.material=o,a.misc_type=s[i],t[i]=a});var i=setInterval(function(){t.length==s.length&&(clearInterval(i),load_manager.set_vox("misc",t),load_manager.set_status("misc",!0))},10)});class GameManager{constructor(e){this.isPlaying=!1,this.isPaused=!1,this.lastTimeDelta=!1,this.interface=e,this.starter=null}init(){this.interface.init(),visibly.visibilitychange(this.tabVisibilityChanged),window.onload=function(){load_manager.load_all(function(){},function(){let e=load_manager.getLoadPercentage();game.interface.indicators.load.innerHTML=e+"%",e>=100&&(config.debug?(game.interface.btnStartClick(),game.start()):(game.interface.buttons.start.classList.remove("hidden"),game.setStarter()))})},config.debug&&(enemy.config.enable_collisions=!1)}setStarter(e=600){this.starter||(this.starter=input.addKeyCallback("space","justPressed",function(){game.starter=null,audio.play("jump"),e>0?(game.interface.other.overlay.classList.add("before-start"),setTimeout(function(){game.interface.btnStartClick()},e)):game.interface.btnRestartClick()},1))}cancelStarter(){this.starter&&(input.removeKeyCallback("space",this.starter),this.starter=null)}start(){if(this.isPlaying)return!1;this.isPlaying=!0,enemy.increase_velocity(13,!0),score.set(0),enemy.init(),nature.initFlowers(load_manager.get_vox("flowers")),nature.initMisc(load_manager.get_vox("misc")),nature.initRocks(),nature.initGround(),audio.play("bg"),this.cancelStarter(),clock.getDelta(),this.render(),this.loop(),visibly.hidden()&&this.pause()}stop(){if(!this.isPlaying)return!1;this.isPlaying=!1,dynoDustEmitter.removeAllParticles(),dynoDustEmitter.stopEmit(),dynoDustEmitter.dead=!0,audio.stop("bg"),this.interface.buttons.restart.classList.remove("hidden"),audio.play("killed"),this.setStarter(0)}pause(){if(!this.isPlaying)return!1;this.isPaused=!0,this.isPlaying=!1,audio.pause("bg")}resume(){if(!this.isPaused)return!1;this.isPlaying=!0,this.isPaused=!1,audio.resume("bg"),clock.getDelta(),this.render(),this.loop()}reset(){enemy.increase_velocity(13,!0),enemy.reset(),nature.reset(),score.reset(),this.render()}restart(){this.isPlaying&&this.stop(),this.reset(),this.start()}render(){let e=clock.getDelta();e>.15&&(e=.15),config.camera.controls&&controls.update(),player.update(e),enemy.update(e),nature.update(e),input.update(),nebulaSystem.update(),config.renderer.postprocessing.enable?composer.render(e):renderer.render(scene,camera),score.update(e)}tabVisibilityChanged(e){"visible"==e?game.isPaused&&game.resume():game.isPlaying&&game.pause()}loop(){if(!this.isPlaying)return!1;requestAnimationFrame(function(){game.loop()}),this.render()}}class InterfaceManager{constructor(){this.buttons={start:document.getElementById("game-start"),restart:document.getElementById("game-restart")},this.indicators={load:document.getElementById("game-load-progress")},this.other={overlay:document.getElementById("chrome-no-internet")}}init(){this.buttons.start.addEventListener("click",this.btnStartClick),this.buttons.restart.addEventListener("click",this.btnRestartClick)}btnStartClick(e){game.interface.buttons.start.display="none",document.body.classList.add("game-started"),game.start()}btnRestartClick(e){game.interface.buttons.restart.classList.add("hidden"),game.restart()}}let game=new GameManager(new InterfaceManager);game.init();